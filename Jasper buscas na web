<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Busca Personalizada - Jasper</title>
    <link rel="stylesheet" href="styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Gandice:wght@400&display=swap" rel="stylesheet">
</head>
<body>
    <header>
        <h1>Jasper</h1>
    </header>
    <div class="search-container">
        <input type="text" id="search-query" placeholder="Digite sua pesquisa...">
        <button onclick="search()">Buscar</button>
    </div>
    <div class="results" id="results"></div>
    <script src="script.js"></script>
</body>
</html>
/* styles.css */

body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    height: 100vh;
    background-color: #f4f4f4;
}

header {
    background-color: #000; /* Preto */
    color: #fff; /* Branco */
    width: 100%;
    text-align: center;
    padding: 20px 0;
    font-family: 'Gandice', sans-serif;
}

header h1 {
    margin: 0;
    font-size: 36px;
}

.search-container {
    text-align: center;
    margin-top: 30px;
}

input[type="text"] {
    width: 60%;
    padding: 10px;
    margin: 10px 0;
    font-size: 16px;
    border: 1px solid #ddd;
    border-radius: 4px;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
}

button {
    padding: 10px 20px;
    font-size: 16px;
    border: none;
    background-color: #007bff; /* Azul */
    color: white;
    cursor: pointer;
    border-radius: 4px;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
}

button:hover {
    background-color: #0056b3; /* Azul escuro */
}

.results {
    margin-top: 20px;
    text-align: left;
    max-width: 600px;
}

.result-item {
    background-color: #fff; /* Branco */
    padding: 10px;
    margin-bottom: 10px;
    border-radius: 4px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.result-item h2 {
    margin: 0;
    font-size: 18px;
}

.result-item p {
    margin: 5px 0 0;
}
// script.js

// Função para obter dados simulados (substitua por uma API real se necessário)
function getSearchResults(query) {
    // Aqui você pode integrar uma chamada real à API
    // Para simulação, usamos dados fixos
    const simulatedResults = [
        {
            title: `Resultado da busca para "${query}" 1`,
            link: "https://exemplo.com/1",
            snippet: "Descrição do resultado 1."
        },
        {
            title: `Resultado da busca para "${query}" 2`,
            link: "https://exemplo.com/2",
            snippet: "Descrição do resultado 2."
        },
        // Adicione mais resultados simulados se necessário
    ];
    return new Promise((resolve) => {
        setTimeout(() => resolve(simulatedResults), 500);
    });
}

// Função para realizar a busca
async function search() {
    const query = document.getElementById('search-query').value;
    if (!query) return;

    const resultsContainer = document.getElementById('results');
    resultsContainer.innerHTML = '<p>Buscando...</p>';

    try {
        const results = await getSearchResults(query);
        displayResults(results);
    } catch (error) {
        console.error('Erro na busca:', error);
        resultsContainer.innerHTML = '<p>Ocorreu um erro na busca. Tente novamente.</p>';
    }
}

// Função para exibir os resultados
function displayResults(results) {
    const resultsContainer = document.getElementById('results');
    resultsContainer.innerHTML = '';

    if (results.length === 0) {
        resultsContainer.innerHTML = '<p>Nenhum resultado encontrado.</p>';
        return;
    }

    results.forEach(result => {
        const resultItem = document.createElement('div');
        resultItem.classList.add('result-item');
        resultItem.innerHTML = `
            <h2><a href="${result.link}" target="_blank">${result.title}</a></h2>
            <p>${result.snippet}</p>
        `;
        resultsContainer.appendChild(resultItem);
    });
}
